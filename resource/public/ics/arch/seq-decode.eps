%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox:  0 0 306 270 
%%Title: (New_1) 
%%Creator: Canvas (7.0 : Build 270) 
%%CreationDate: (05/13/02 @ 08:40 AM) 
%%DocumentProcSets: Deneba_CanvasCustomColors
%%+ CVDict
%%DocumentFonts: 
%%DocumentSuppliedFonts: Helvetica

%%DocumentProcessColors: Cyan Magenta Yellow Black
%%EndComments
%%BeginProlog 
%%BeginResource: procset CVDict
%%Title: Deneba standard graphics
%%Version: 1.02
%%CreationDate: 10/14/99
%%Copyright: (C) 1994, 1999 Deneba Systems. All Rights Reserved
userdict /CVDict 200 dict put
CVDict begin
/invalidcolortable? true def   
/level2 /languagelevel where {pop languagelevel 2 ge}{false} ifelse def
level2 not { /xshow {
0 currentpoint 5 -1 roll {pop pop moveto dup 1 add 3 1 roll exch dup 4 1 roll exch get 0 rmoveto currentpoint} exch kshow 
pop pop pop pop} def } if
/initialize
{CVDict
{dup xcheck{bind}if pop pop}forall
currentscreen /_sp exch def /_sa exch def /_sf exch def
/DefaultScreen{_sf _sa /_sp load}def
/DefaultScreenProc{ /_sp load}def
/setstrokeadjust where{pop true}{false}ifelse
{/sa /setstrokeadjust load def
/li /lineto load def
/mt /moveto load def
/ct /curveto load def
/lh { currentpoint exch pop lineto}bind def
/lv { currentpoint pop exch lineto}bind def}
{/sa{{currentdict StrokeAdjustDict ne{StrokeAdjustDict begin}if}{ currentdict StrokeAdjustDict eq{end}if}ifelse} bind def
userdict /StrokeAdjustDict 100 dict put
StrokeAdjustDict begin
/_xl
{transform
.25 sub round .25 add exch
.25 sub round .25 add exch
itransform
}bind def
/li{ _xl lineto}bind def
/mt{ _xl moveto}bind def
/ct{ _xl curveto}bind def
/lh { dup _xl pop currentpoint exch pop lineto}bind def
/lv { dup _xl pop currentpoint pop exch lineto}bind def
/rp{_xl/cv_b xdf/cv_r xdf
_xl/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath
}bind def
end}ifelse}def
/terminate
{userdict /StrokeAdjustDict known {currentdict StrokeAdjustDict eq{end}if}if
currentdict CVDict eq{end}if}def
/mxMax 64 def
/mxStk [mxMax {matrix} repeat]def
/mxIdx 0 def
/stm{mxStk mxIdx 0 lt {/mxIdx 0 store}if mxIdx get currentmatrix pop /mxIdx mxIdx 1 add store}def
/rtm{mxIdx 1 ge {/mxIdx mxIdx 1 sub store mxStk mxIdx get setmatrix}if }def
/scl { 72 div exch 72 div exch scale } def
/scli { 72 exch div exch 72 exch div exch scale } def
/_cvmtx matrix def
/_txtmtx matrix def
/_initmtx matrix def
/xdf{exch def}def
/min{2 copy gt{exch}if pop}def
/max{2 copy lt{exch}if pop}def
/CVvec 256 array def
/T true def
/F false def
/_id 0 def
/_encodindex 0 def
/_encodArr 3 array def
/_fd 0 def
/_textSave null def
/_letterSpace 0 def
/_spaceXtra 0 def
/_PageSave null def
/_penh 1.0 def
/_penv 1.0 def
/save0 null def
/_w 0 def
/_h 0 def
/_ds 0 def
/hct false def
/pw 0 def
/wdif 0 def
/temp 0 def
/currot 0 def
/savehandler null def
/ia 0 def
/ix 0 def
/ixn 1 def
/MultipleDataSources false def 
/debug
{dup /$eps exch not def{/savehandler errordict /handleerror get def
errordict
/handleerror{$error begin
newerror{/newerror false def
showpage
72 72 scale
/Helvetica findfont .2 scalefont setfont
.25 9.6 moveto
(Error: )show
errorname
{dup type/stringtype ne
{(converted error name will end up in this string)cvs}if
show}exec
.25 9.4 moveto
(Offending Command: )show
/command load
{dup type/stringtype ne
{(converted command name will end up in this string)cvs}if
show}exec
.25 9.2 moveto
(Stack: )show
ostack
{.25 currentpoint .2 sub exch pop moveto
dup type/stringtype ne{dup type/integertype eq
1 index type/realtype eq or
1 index type/nametype eq or
not {type}if
(converted stack will end up in this string)cvs}if
show}forall
showpage
CVDict /savehandler get exec}if
end}put}if}def
/lc{setlinecap}def
/lj{setlinejoin}def
/lm{setmiterlimit}def
/lf{setflat}def
/cp{closepath}def
/np{newpath}def
/$psz 30 array def
/$pix 0 def
/gs{gsave $psz dup $pix _penh put $pix 1 add _penv put /$pix $pix 2 add def}def
/gr{grestore/$pix $pix 2 sub def $psz dup $pix get /_penh exch def $pix 1 add get /_penv exch def}def
/li{lineto} def
/lh{currentpoint exch pop lineto}def
/lv{currentpoint pop exch lineto}def
/mt{moveto} def
/_cv_mh{currentpoint exch pop moveto}def
/_cv_mv{currentpoint pop exch moveto}def
/ct{curveto} def
/rt{4 -2 roll moveto
dup 0 exch rlineto
exch 0 rlineto
neg 0 exch rlineto
closepath}def
/_hr
{
{/@err false def currentflat dup{gsave{eoclip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {eoclip}if setflat}
{/@err false def currentflat dup{gsave{clip}stopped{grestore 2 mul dup setflat dup 200 ge{(%% Canvas:Clip failed\r)print /@err true def pop exit}if}{grestore setflat exit}ifelse}loop @err not {clip}if setflat}
}def
/_cs null def
/fg{setgray}def
/setcmykcolor where {pop true}{false}ifelse
{/f4{ setcmykcolor}def}{/f4{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}def}ifelse
/setcolorspace where {pop true}{false}ifelse
{/scs{ dup setcolorspace /_cs exch def}def/f3{ _cs setcolorspace setcolor}def
}{/f3{ setrgbcolor}def/scs{ pop}def}ifelse
/$cc 5 array def
/findcmykcustomcolor where {pop true}{false}ifelse
not {/findcmykcustomcolor{$cc astore}def}if
/setcustomcolor where {pop true}{false}ifelse
not{/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}def}if
/fc{6 1 roll findcmykcustomcolor exch setcustomcolor}def
/setseparationgray where {pop true}{false}ifelse
not{/setseparationgray {systemdict /setgray get exec} def}if
/sg{ setseparationgray}def
/sp{/_penv xdf/_penh xdf}def
/rp
{/cv_b xdf/cv_r xdf
/cv_t xdf/cv_l xdf
cv_l cv_t moveto
cv_r cv_t lineto
cv_r cv_b lineto
cv_l cv_b lineto
closepath}def
/rr{/yradius xdf
/xradius xdf
/cv_b xdf
/cv_r xdf
/cv_t xdf
/cv_l xdf
cv_l xradius add cv_t moveto
cv_r xradius sub cv_t lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
1 0 1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_r cv_b yradius sub lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 1 -1 1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l xradius add cv_b lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
-1 0 -1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
cv_l cv_t yradius add lineto
_cvmtx currentmatrix pop
currentpoint translate
xradius yradius scale
0 -1 1 -1 1 arcto 4{pop}repeat
_cvmtx setmatrix
closepath}def
/ep{_cvmtx currentmatrix pop
translate
scale
1 0 moveto
0 0 1 0 360 arc
closepath
_cvmtx setmatrix}def
/wd{_cvmtx currentmatrix pop
translate
scale
0 0 moveto
0 0 1 5 -2 roll arcn
closepath
_cvmtx setmatrix}def
/as{_cvmtx currentmatrix pop
translate
scale
0 0 1 5 -2 roll arcn
_cvmtx setmatrix}def
/ds
{_penv _penh ne dup{stm _penh dup 0 le{pop 1}if _penv dup 0 le{pop 1}if scale}{_penh setlinewidth}ifelse stroke {rtm}if}def
/df{fill}def
/de{eofill}def
/_gstk 5 array def
/_gstkc 0 def
/_gst{ 9 dict begin level2{/_ccs currentcolorspace def /_cc [currentcolor] def}{/_cc [currentrgbcolor]def}ifelse {currentpoint}stopped {/_cp null def}{ 2 array astore /_cp exch def}ifelse /_cf currentfont def
/_clw currentlinewidth def /_clc currentlinecap def /_clj currentlinejoin def /_cml currentmiterlimit def currentdict end}def
/hs{newpath gsave stm}def
/hc{/_hr load exch get exec newpath}def
/he{_gstk _gstkc _gst put /_gstkc _gstkc 1 add store 
grestore rtm /_gstkc _gstkc 1 sub store _gstk _gstkc get level2{dup /_ccs get setcolorspace dup /_cc get aload pop setcolor}{dup /_cc get aload pop setrgbcolor}ifelse dup /_cp get dup null eq 
not{aload pop moveto}{pop}ifelse dup /_cf get setfont
dup/_clw get setlinewidth dup/_clc get setlinecap dup/_clj get setlinejoin dup/_cml get setmiterlimit pop}def
/id{ /_id xdf}def
/_imatrix{_w 0 0 _h _id 0 ne{neg 0 _h}{0 0}ifelse _cvmtx astore}def
% Copyright (C) 1990, 1991 by Adobe Systems Incorporated.
% All rights reserved.
level2 { save /dontloadlevel1 xdf }if
/startnoload{{/noload save def} if}def
/endnoload{{noload restore}if }def
/testsystemdict{where{systemdict eq{true}{false}ifelse}{false}ifelse}def
/ncolors 1 def
/colorimage where{pop true}{false}ifelse{/ncolors 0
statusdict begin 
/processcolors where{pop pop processcolors}{/deviceinfo where{pop deviceinfo /Colors known
{pop {deviceinfo /Colors get}}if}if}ifelse end def
ncolors 0 ne{/colorimage testsystemdict
/setcolortransfer testsystemdict
/currentcolortransfer testsystemdict
/currentcmykcolor testsystemdict
and and and not{/ncolors 0 def}if}if}if
ncolors dup 1 ne exch dup 3 ne exch 4 ne and and {/ncolors 0 def}if
ncolors 1 eq dup dup not startnoload
{/doclutimage{[{255 mul round cvi bwclut exch get 255 div} /exec load dup currenttransfer exch] 
cvx bind settransfer _w _h 8 _imatrix _ds image}def}if
not endnoload
ncolors dup 3 eq exch 4 eq or
dup dup not startnoload
{/nullproc{{}}def/concatutil{/exec load
7 -1 roll /exec load}def
/defsubclut
{1 add getinterval def}def
/spconcattransfer   
{/Dclut exch def/Cclut exch def/Bclut exch def/Aclut exch def/ncompute exch ld
currentcolortransfer
[{Aclut ncompute}concatutil] cvx
[{Bclut ncompute}concatutil] cvx
[{Cclut ncompute}concatutil] cvx
[{Dclut ncompute}concatutil] cvx
setcolortransfer}def
/setuprgbcluts
{/bit3x rgbclut length 3 sub def
/bit1x bit3x 3 idiv def/rclut rgbclut def
/gclut rclut 1 bit3x defsubclut/bclut rclut 2 bit3x defsubclut}def}if not  
endnoload ncolors 3 eq dup dup not startnoload
{/3compute{exch bit3x mul
round cvi get 255 div}def
/doclutimage{%/rgbclut xdf pop 
setuprgbcluts/3compute rclut gclut bclut dup
spconcattransfer _w _h 8 _imatrix
[/_ds load /exec load /dup load dup]cvx
nullproc nullproc true 3 colorimage}def}if not endnoload ncolors 4 eq dup dup not startnoload
{/stuffclut{cmykindex 3 -1 roll put}def
/ftoint{1 exch sub 255 mul round cvi}def
/4compute { exch bit4x mul round cvi get 255 div } def
/computecmykclut{setuprgbcluts/bit4x rgbclut length 3 idiv 4 mul 4 sub def
/cmykclut bit4x 4 add string def
/cclut cmykclut def
/mclut cclut 1 bit4x defsubclut
/yclut cclut 2 bit4x defsubclut
/kclut cclut 3 bit4x defsubclut
/cmykindex 0 def
0 1 bit1x
{dup /cmykindex exch bit1x exch sub 4 mul def
3 mul dup rclut exch get 255 div exch dup gclut exch get 255 div
exch bclut exch get 255 div
setrgbcolor currentcmykcolor
ftoint kclut stuffclut
ftoint yclut stuffclut
ftoint mclut stuffclut
ftoint cclut stuffclut
}for}def
/doclutimage{invalidcolortable?{computecmykclut}if
/4compute cclut mclut yclut kclut spconcattransfer
_w _h 8 _imatrix[/_ds load /exec load/dup load dup dup] cvx 
nullproc nullproc nullproc true 4 colorimage}def}if
not endnoload
ncolors 0 eq
dup dup not startnoload
{/colorexpand{mystringexp 0 rgbclut
3 copy
7 -1 roll
{3 mul 3 getinterval putinterval exch 3 add exch 3 copy}forall
pop pop pop pop pop}def
/createexpandstr{/mystringexp exch st0 length mul string def}def
/doclutimage{/rgbclut xdf pop 3 createexpandstr _w _h 8 _imatrix
[/_ds load /exec load /colorexpand load /exec load] cvx
false 3 colorimage}def}if not endnoload
level2 { dontloadlevel1 restore }if
level2 not{ save /dontloadlevel2 xdf }if
/rgbclut 0 def
/doclutimage{/hival 255 def 
[/Indexed /DeviceRGB hival rgbclut] setcolorspace
_imagedict dup begin 
/Width _w def 
/Height _h def  
/Decode [0 hival] def  
/ImageMatrix _imatrix def
/BitsPerComponent 8 def 
/Interpolate false def
end image}def
level2 not{ dontloadlevel2 restore }if
%%EndProcSet
/_imagedict 15 dict begin /ImageType 1 def/BitsPerComponent 8 def/Interpolate false def currentdict end def
/hascolor true def
/level2 systemdict /languagelevel known
{languagelevel 2 ge}{false}ifelse def
/foureq {4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and} def
/setupbands{gsave
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/_image systemdict /image get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}ifelse def
/inverted? negative def
/_currentgray systemdict /currentgray get def
hascolor{/$b 0 def} {/$b 5 def} ifelse
/setcmykcolor where{pop 1 0 0 0 setcmykcolor _currentgray 1 exch sub
0 1 0 0 setcmykcolor _currentgray 1 exch sub
0 0 1 0 setcmykcolor _currentgray 1 exch sub
0 0 0 1 setcmykcolor _currentgray 1 exch sub
4 {4 copy} repeat
1 0 0 0 foureq{/$b 1 store}if
0 1 0 0 foureq{/$b 2 store}if
0 0 1 0 foureq{/$b 3 store}if
0 0 0 1 foureq{/$b 4 store}if
0 0 0 0 foureq{/$b 6 store}if}if
blank{/$b 6 store}if
$b 0 eq $b 5 eq or{/$dt 0 def}if/$dt -1 def grestore}def
/doimage{
level2{image}{begin
Width Height BitsPerComponent ImageMatrix
Decode length 2 eq
{/DataSource load end image}{
Decode length 6 eq
{MultipleDataSources{DataSource 0 get DataSource 1 get DataSource 2 get}{/DataSource load}ifelse
MultipleDataSources 3 end DSIColorImage}{
Decode length 8 eq{MultipleDataSources{DataSource 0 get DataSource 1 get
DataSource 2 get DataSource 3 get}{/DataSource load}ifelse
MultipleDataSources 4 end DSIColorImage}if}ifelse
}ifelse
}ifelse}def
/dt{/rgbclut xdf /bwclut xdf}def
/cl{$i setmatrix translate scale
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
doclutimage} def
/cd{$i setmatrix translate scale
level2{_imagedict /ColorSpace get setcolorspace}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
/ImageMatrix _imatrix def
currentdict end
doimage} def
/im{$i setmatrix translate scale 
level2{/DeviceGray setcolorspace 0 setgray}if
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_imagedict begin
%/Decode [0 1] def  
%/Width _w def
%/Height _h def
/ImageMatrix _imatrix def
currentdict end 
doimage }def
/colorimage where{pop/DSIColorImage {colorimage} def}{/DSIColorImage{
/$nc xdf pop /proc0 xdf 3 index 2 index mul 7 add 8 div cvi string /st1 xdf
$nc 3 eq{{proc0 dup/st0 xdf 0 exch 3 exch length 3 sub
{dup st0 exch get .3 mul 1 index 1 add st0 exch get .59 mul add 1 index 2 add st0 exch get .11 mul add
cvi exch 3 div cvi exch st1 3 1 roll put}for st1}}{{proc0 dup/st0 xdf 0 exch 4 exch length 4 sub{dup
st0 exch get .3 mul
1 index 1 add st0 exch get .59 mul add
1 index 2 add st0 exch get .11 mul add
1 index 3 add st0 exch get add dup 255.0 gt{pop 255.0}if
255.0 exch sub cvi
exch 4 div cvi exch
st1 3 1 roll put}for st1}}ifelse
image}def}ifelse
/OPIimage{image}def
/$i matrix def
/bi{scale translate $i currentmatrix pop translate scale setupbands}def
/ei{$i setmatrix}def
/ik{$i setmatrix translate scale 
/_w _imagedict /Width get def
/_h _imagedict /Height get def
/_ds _imagedict /DataSource get def
_w _h false _imatrix 5 -1 roll _ds imagemask}def
/rs{2 copy translate
3 -1 roll neg rotate
neg exch neg exch translate
}def
/cs{_cvmtx astore concat} def
/fd{/_fd xdf}def
/_fontMatrix{1 0 0 _fd 0 ne{-1 0 0}{1 0 0}ifelse _cvmtx astore}def
/rf{/_encodindex xdf
FontDirectory exch known {
findfont dup length 1 add dict begin{1 index/FID ne{def}{pop pop}ifelse}forall
dup /FontName exch def FontType 0 ne{/Encoding Encoding 256 array copy def
_encodindex 0 ge{0 _encodArr _encodindex get{dup type/nametype eq{Encoding 2 index 2 index put pop 1 add}
{exch pop}ifelse}forall pop}if}if
currentdict end
definefont pop }{pop pop}ifelse} def
/cvsf{ findfont ftSize 0 0 ftSize _fd 0 ne{-1 mul}if 0 0 _cvmtx astore 
makefont setfont}def
/mf{3 -1 roll findfont 3 1 roll exch ftSize mul exch ftSize mul 0 exch 0 exch 
_fd 0 ne{-1 mul}if 0 0 _cvmtx astore makefont setfont}def
/wrk1 ( ) def
/wdict 16 dict def
/Work75 75 string def
/Nmk{Work75 cvs dup}def
/Npt{put cvn}def
/dhOdh{Nmk 2 79 Npt}def
/dhBdh{Nmk 2 111 Npt}def
/dhSdh{Nmk 2 83 Npt}def
/sfWidth{gsave 0 0 moveto 0 0 lineto 0 0 lineto 0 0 lineto closepath clip stringwidth grestore}def
/fts{/ftSize exch def}def
/mkFT{dup/FontType get 0 eq{dup maxlength dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
currentdict end
dup/FDepVector 2 copy get
[exch 6 index exch 6 index exch{mkFT 3 1 roll}forall pop pop] put dup}{/tempFT 12 dict def
tempFT begin
/FontMatrix [1 0 0 1 0 0] def
/FontType 3 def
dup/Encoding get/Encoding exch def
/proc2 2 index def
dup/ft1 exch def
/ft2 1 array def
/FontBBox [0 0 1 1] def
/BuildChar{CVDict begin
exch dup/ftdt xdf begin
wdict begin
/chr xdf/chrst wrk1 dup 0 chr put def
ft2 0 get null eq{ft1 dup length 2 add dict begin
{1 index/FID ne 2 index /UniqueID ne and{def}{pop pop}ifelse}forall
/PaintType 2 def/StrokeWidth .024 0 FontMatrix idtransform pop def
currentdict end
/q exch definefont
ft2 exch 0 exch put}if
ftdt/proc2 get exec end end end}def end tempFT}ifelse
3 index exch
definefont exch pop}def
/mb{dup dhBdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{boldproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/mo{dup dhOdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{outproc} exch
mkFT pop pop pop exch pop
}ifelse }def
/ms{dup dhSdh FontDirectory 1 index known
{exch pop}{dup 2 index
findfont{ShadChar} exch
mkFT  pop pop pop exch pop
}ifelse }def
/outproc{ft1 setfont
gsave chrst sfWidth grestore
setcharwidth dblsh}def
/boldproc{ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
ft1 /PaintType get 2 ne
{0 0 moveto gsave ft2 0 get setfont chrst show grestore chrst show}
{0 0 moveto gsave chrst show grestore .05 0 moveto chrst show}ifelse}def
/dblsh{currentcolor currentcolorspace 1.0 setgray
chrst 0 0 moveto show setcolorspace setcolor
ft2 0 get setfont chrst 0 0 moveto show}def
/ShadChar{
ft1 setfont
gsave
chrst sfWidth 1 index 0 ne{exch .05 add exch}if
grestore
setcharwidth
chrst .06 0 moveto show
0 .05 translate dblsh}def
/ts{show}def
/ta{/_letterSpace xdf/_spaceXtra xdf}def
/tf{/_textWidth xdf
/_numSpaces xdf
/_stringLength xdf
dup	stringwidth pop
_letterSpace _stringLength 1 sub mul add
_spaceXtra _numSpaces mul add
_textWidth exch sub /wdif xdf
_spaceXtra 0 32
wdif _stringLength div
_letterSpace add
0 6 -1 roll awidthshow}def
/pb{/_PageSave save def/showpage{}def}def
/pe{_PageSave restore}def
/pm{_pm currentmatrix pop}def
/_pm matrix def
/ps{showpage _pm setmatrix}def
level2{/ef {gsave 6 array astore concat dup execform grestore}def}
{/ef{gsave 6 array astore concat newpath dup begin Matrix concat
BBox dup dup 0 get exch 1 get moveto
dup dup 0 get exch 3 get lineto
dup dup 2 get exch 3 get lineto
dup 2 get exch 1 get lineto closepath
clip newpath PaintProc end grestore}def}ifelse
/bc{save 11 1 roll 10 dict begin /BBox 5 1 roll 4 array astore def
/Matrix 7 1 roll 6 array astore def /FormType 1 def/PaintProc{/pp get exec}def}def
/ec{pop restore}def
/printvm{1 vmreclaim vmstatus pop exch pop (                         )cvs print (\n)print flush}def
/setoverprint where {pop}{/setoverprint{pop}def}ifelse
/sstr { /$sstrs exch def /$sstr exch def /$sstry exch def /$sstrx exch def /Courier findfont $sstrs 
scalefont setfont $sstrx $sstry mt stm 1 -1 scale $sstr show rtm } def
/DSIBeginPaintProc{/pp mark{currentfile token not{}if dup/DSIEndPaintProc
	eq{pop counttomark array astore cvx bind /exec load]cvx def DSIEndPaintProc exit}
	{counttomark 300 gt{counttomark array astore cvx bind /exec load}if}ifelse}loop}def
/DSIEndPaintProc{currentdict end}def
/DSIBeginPaintSubProc {save 11 1 roll 10 dict dup /pD exch def begin 
	/BBox 5 1 roll 4 array astore def /Matrix 7 1 roll 6 array astore def 
	/FormType 1 def /PaintProc { /pp get exec } def /pp} def
/DSIEndPaintSubProc {bind def end pD} def
/iaa {/ix ix ixn add def} def
/ias2 {/igap exch def /_st0 ia ix igap add get def _st0} def
/ias {/st0 ia ix get def iaa st0} def
/i85s {0 ias2 /ASCII85Decode filter st0 readstring pop iaa} def
/irles {0 ias2 /ASCII85Decode filter /RunLengthDecode filter st0 readstring pop iaa} def
initialize
end
%%EndResource
CVDict begin 0 id 1 fd
_encodArr 0
[
39/quotesingle 96/grave
128/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron
/guilsinglright/oe/bullet/bullet/Ydieresis
/bullet/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring
/AE/Ccedilla/Egrave/Eacute/Egrave/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis
/aring
/ae/ccedilla/egrave/eacute/ecircumflex/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] put
_encodArr 1
[
39/quotesingle 96/grave
128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
] put
end
%%EndProlog 
CVDict begin
/___FN2 /Helvetica dup dup findfont dup /CharStrings known {begin CharStrings /Adieresis known { 0 }{-1} ifelse end} {pop -1} ifelse rf
end
0.25 0.25 translate
%%BeginSetup 
CVDict begin

0 id
1 fd
0 270 translate
300 -300 scli
%%EndSetup 
%%BeginPageSetup 
pm
%%EndPageSetup
/DeviceCMYK scs
0 0 0 1. f4
0.1250 0.1250 sp
 0 lc
 2 lj
T sa
%page rect: 145 254 451 524 
stm
0 0 0 0 f4
np
74.9998 62.4998 749.9981 1062.4974 ep
de
rtm
stm
stm
49.9999 fts
/___FN2 cvsf
0.668 0.582 0.6641 0.5117 f4
F sa
725.9982 1081.2474 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
741.6232 1081.2474 mt
(B)  show
T sa
rtm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
4.1667 4.1667 sp
np
299.9993 696.8733 mt
299.9993 537.4986 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
312.4992 546.8737 mt
299.9993 524.9987 li
290.6243 546.8737 li
312.4992 546.8737 li
cp
de
rtm
stm
0.25 0.2148 0.2344 0.0273 f4
np
240.6244 699.9983 mt
231.2494 699.9983 224.9995 706.2483 224.9995 715.6233 ct
224.9995 784.3731 li
224.9995 793.7481 231.2494 799.998 240.6244 799.998 ct
359.3741 799.998 li
368.7491 799.998 374.9991 793.7481 374.9991 784.3731 ct
374.9991 715.6233 li
374.9991 706.2483 368.7491 699.9983 359.3741 699.9983 ct
240.6244 699.9983 li
cp
de
0.668 0.582 0.6641 0.5117 f4
np
240.6244 699.9983 mt
231.2494 699.9983 224.9995 706.2483 224.9995 715.6233 ct
224.9995 784.3731 li
224.9995 793.7481 231.2494 799.998 240.6244 799.998 ct
359.3741 799.998 li
368.7491 799.998 374.9991 793.7481 374.9991 784.3731 ct
374.9991 715.6233 li
374.9991 706.2483 368.7491 699.9983 359.3741 699.9983 ct
240.6244 699.9983 li
cp
ds
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
250.9994 768.7481 mt
(d)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
279.1243 768.7481 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
304.1243 768.7481 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
316.6242 768.7481 mt
(E)  show
T sa
rtm
rtm
stm
0.25 0.2148 0.2344 0.0273 f4
np
390.624 699.9983 mt
381.2491 699.9983 374.9991 706.2483 374.9991 715.6233 ct
374.9991 784.3731 li
374.9991 793.7481 381.2491 799.998 390.624 799.998 ct
509.3737 799.998 li
518.7487 799.998 524.9987 793.7481 524.9987 784.3731 ct
524.9987 715.6233 li
524.9987 706.2483 518.7487 699.9983 509.3737 699.9983 ct
390.624 699.9983 li
cp
de
0.668 0.582 0.6641 0.5117 f4
np
390.624 699.9983 mt
381.2491 699.9983 374.9991 706.2483 374.9991 715.6233 ct
374.9991 784.3731 li
374.9991 793.7481 381.2491 799.998 390.624 799.998 ct
509.3737 799.998 li
518.7487 799.998 524.9987 793.7481 524.9987 784.3731 ct
524.9987 715.6233 li
524.9987 706.2483 518.7487 699.9983 509.3737 699.9983 ct
390.624 699.9983 li
cp
ds
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
397.874 768.7481 mt
(d)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
425.999 768.7481 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
450.9989 768.7481 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
463.4989 768.7481 mt
(M)  show
T sa
rtm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
12.5000 12.5000 sp
np
724.9982 249.9994 mt
724.9982 153.1246 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
743.7482 162.4996 mt
724.9982 124.9997 li
709.3733 162.4996 li
743.7482 162.4996 li
cp
de
rtm
stm
0.25 0.2148 0.2344 0.0273 f4
np
540.6237 699.9983 mt
531.2487 699.9983 524.9987 706.2483 524.9987 715.6233 ct
524.9987 784.3731 li
524.9987 793.7481 531.2487 799.998 540.6237 799.998 ct
659.3734 799.998 li
668.7484 799.998 674.9983 793.7481 674.9983 784.3731 ct
674.9983 715.6233 li
674.9983 706.2483 668.7484 699.9983 659.3734 699.9983 ct
540.6237 699.9983 li
cp
de
0.668 0.582 0.6641 0.5117 f4
4.1667 4.1667 sp
np
540.6237 699.9983 mt
531.2487 699.9983 524.9987 706.2483 524.9987 715.6233 ct
524.9987 784.3731 li
524.9987 793.7481 531.2487 799.998 540.6237 799.998 ct
659.3734 799.998 li
668.7484 799.998 674.9983 793.7481 674.9983 784.3731 ct
674.9983 715.6233 li
674.9983 706.2483 668.7484 699.9983 659.3734 699.9983 ct
540.6237 699.9983 li
cp
ds
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
550.9987 768.7481 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
575.9986 768.7481 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
591.6236 768.7481 mt
(c)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
616.6235 768.7481 mt
(A)  show
T sa
rtm
rtm
stm
0.25 0.2148 0.2344 0.0273 f4
np
690.6233 699.9983 mt
681.2483 699.9983 674.9983 706.2483 674.9983 715.6233 ct
674.9983 784.3731 li
674.9983 793.7481 681.2483 799.998 690.6233 799.998 ct
809.373 799.998 li
818.748 799.998 824.998 793.7481 824.998 784.3731 ct
824.998 715.6233 li
824.998 706.2483 818.748 699.9983 809.373 699.9983 ct
690.6233 699.9983 li
cp
de
0.668 0.582 0.6641 0.5117 f4
np
690.6233 699.9983 mt
681.2483 699.9983 674.9983 706.2483 674.9983 715.6233 ct
674.9983 784.3731 li
674.9983 793.7481 681.2483 799.998 690.6233 799.998 ct
809.373 799.998 li
818.748 799.998 824.998 793.7481 824.998 784.3731 ct
824.998 715.6233 li
824.998 706.2483 818.748 699.9983 809.373 699.9983 ct
690.6233 699.9983 li
cp
ds
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
700.9983 768.7481 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
725.9982 768.7481 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
741.6232 768.7481 mt
(c)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
766.6231 768.7481 mt
(B)  show
T sa
rtm
rtm
stm
stm
58.3332 fts
/___FN2 cvsf
0.668 0.582 0.6641 0.5117 f4
F sa
425.999 381.2491 mt
(R)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
469.7489 381.2491 mt
(e)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
500.9988 381.2491 mt
(g)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
535.3737 381.2491 mt
(i)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
547.8737 381.2491 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
579.1236 381.2491 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
591.6236 381.2491 mt
(e)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
625.9985 381.2491 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
497.8738 449.9989 mt
(f)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
516.6237 449.9989 mt
(i)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
529.1237 449.9989 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
541.6237 449.9989 mt
(e)  show
T sa
rtm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
234.3744 259.3744 837.498 537.4986 rp
de
rtm
stm
0.1406 0.0078 0.0313 0 f4
np
224.9995 249.9994 824.998 524.9987 rp
de
0.668 0.582 0.6641 0.5117 f4
np
224.9995 249.9994 824.998 524.9987 rp
ds
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
416.624 371.8741 mt
(R)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
460.3739 371.8741 mt
(e)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
491.6238 371.8741 mt
(g)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
525.9987 371.8741 mt
(i)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
538.4987 371.8741 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
569.7486 371.8741 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
582.2486 371.8741 mt
(e)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
616.6235 371.8741 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
488.4988 440.6239 mt
(f)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
507.2488 440.6239 mt
(i)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
519.7487 440.6239 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
532.2487 440.6239 mt
(e)  show
T sa
rtm
rtm
stm
rtm
stm
stm
41.6666 fts
/___FN2 cvsf
0.668 0.582 0.6641 0.5117 f4
F sa
313.4992 299.9993 mt
(A)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
713.4983 299.9993 mt
(B)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
785.3731 331.2492 mt
(M)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
788.4981 456.2489 mt
(E)  show
T sa
rtm
rtm
stm
rtm
stm
stm
37.4999 fts
/___FN2 cvsf
0.668 0.582 0.6641 0.5117 f4
F sa
257.2494 499.9988 mt
(d)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
279.1243 499.9988 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
300.9993 499.9988 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
310.3743 499.9988 mt
(E)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
400.999 499.9988 mt
(d)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
422.874 499.9988 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
444.7489 499.9988 mt
(t)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
454.1239 499.9988 mt
(M)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
557.2486 499.9988 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
579.1236 499.9988 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
591.6236 499.9988 mt
(c)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
610.3735 499.9988 mt
(A)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
707.2483 499.9988 mt
(s)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
729.1232 499.9988 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
741.6232 499.9988 mt
(c)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
760.3732 499.9988 mt
(B)  show
T sa
rtm
rtm
stm
0 0 0 0 f4
np
74.9998 62.4998 74.9998 1062.4974 ep
de
rtm
stm
stm
49.9999 fts
/___FN2 cvsf
0.668 0.582 0.6641 0.5117 f4
F sa
16.625 1081.2474 mt
(i)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
29.1249 1081.2474 mt
(c)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
54.1249 1081.2474 mt
(o)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
82.2498 1081.2474 mt
(d)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
110.3747 1081.2474 mt
(e)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
575.9986 1081.2474 mt
(r)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
591.6236 1081.2474 mt
(A)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
679.1234 81.2498 mt
(v)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
700.9983 81.2498 mt
(a)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
729.1232 81.2498 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
738.4982 81.2498 mt
(B)  show
T sa
rtm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
12.5000 12.5000 sp
np
324.9992 249.9994 mt
324.9992 153.1246 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
343.7492 162.4996 mt
324.9992 124.9997 li
309.3742 162.4996 li
343.7492 162.4996 li
cp
de
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
279.1243 81.2498 mt
(v)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
300.9993 81.2498 mt
(a)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
329.1242 81.2498 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
338.4992 81.2498 mt
(A)  show
T sa
rtm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
1199.9971 124.9997 mt
1199.9971 424.999 li
853.1229 424.999 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
862.4979 409.374 mt
824.998 424.999 li
862.4979 443.7489 li
862.4979 409.374 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
1049.9974 124.9997 mt
1049.9974 299.9993 li
853.1229 299.9993 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
862.4979 284.3743 mt
824.998 299.9993 li
862.4979 318.7492 li
862.4979 284.3743 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
4.1667 4.1667 sp
np
449.9989 696.8733 mt
449.9989 537.4986 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
462.4989 546.8737 mt
449.9989 524.9987 li
440.6239 546.8737 li
462.4989 546.8737 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
599.9985 696.8733 mt
599.9985 537.4986 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
612.4985 546.8737 mt
599.9985 524.9987 li
590.6236 546.8737 li
612.4985 546.8737 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
749.9982 696.8733 mt
749.9982 537.4986 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
762.4981 546.8737 mt
749.9982 524.9987 li
740.6232 546.8737 li
762.4981 546.8737 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
599.9985 1024.9975 mt
599.9985 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
612.4985 824.998 mt
599.9985 799.998 li
590.6236 824.998 li
612.4985 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
749.9982 1024.9975 mt
749.9982 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
762.4981 824.998 mt
749.9982 799.998 li
740.6232 824.998 li
762.4981 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
599.9985 924.9977 mt
449.9989 924.9977 li
449.9989 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
462.4989 824.998 mt
449.9989 799.998 li
440.6239 824.998 li
462.4989 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
749.9982 974.9976 mt
299.9993 974.9976 li
299.9993 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
312.4992 824.998 mt
299.9993 799.998 li
290.6243 824.998 li
312.4992 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 599.9985 924.9977 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 599.9985 924.9977 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 599.9985 924.9977 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 599.9985 924.9977 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 749.9982 974.9976 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 749.9982 974.9976 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 749.9982 974.9976 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 749.9982 974.9976 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
74.9998 1024.9975 mt
74.9998 874.9979 li
699.9983 874.9979 li
699.9983 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
712.4983 824.998 mt
699.9983 799.998 li
690.6233 824.998 li
712.4983 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
549.9987 874.9979 mt
549.9987 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
562.4986 824.998 mt
549.9987 799.998 li
540.6237 824.998 li
562.4986 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 549.9986 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 549.9986 874.9979 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 549.9986 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 549.9986 874.9979 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
399.999 874.9979 mt
399.999 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
412.499 824.998 mt
399.999 799.998 li
390.624 824.998 li
412.499 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 399.999 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 399.999 874.9979 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 399.999 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 399.999 874.9979 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
249.9994 874.9979 mt
249.9994 815.623 li
ds
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
262.4994 824.998 mt
249.9994 799.998 li
240.6244 824.998 li
262.4994 824.998 li
cp
de
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 249.9994 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 249.9994 874.9979 ep
ds
rtm
stm
rtm
stm
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 249.9994 874.9979 ep
de
0.668 0.582 0.6641 0.5117 f4
np
12.5 12.5 249.9994 874.9979 ep
ds
rtm
stm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1154.1222 81.2498 mt
(v)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1175.9971 81.2498 mt
(a)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1204.1221 81.2498 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1213.497 81.2498 mt
(E)  show
T sa
rtm
rtm
stm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
997.8726 81.2498 mt
(v)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1019.7475 81.2498 mt
(a)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1047.8725 81.2498 mt
(l)  show
T sa
rtm
rtm
stm
stm
0.668 0.582 0.6641 0.5117 f4
F sa
1057.2474 81.2498 mt
(M)  show
T sa
rtm
rtm
terminate
